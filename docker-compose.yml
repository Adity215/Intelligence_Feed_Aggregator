version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: threat-intel-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: threat-intelligence
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - threat-intel-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: threat-intel-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - threat-intel-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: threat-intel-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD:-changeme}@mongodb:27017/threat-intelligence?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-changeme}@redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - threat-intel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: threat-intel-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - threat-intel-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: threat-intel-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - threat-intel-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: threat-intel-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - threat-intel-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: threat-intel-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - threat-intel-network

  # Backup Service
  backup:
    image: alpine:latest
    container_name: threat-intel-backup
    restart: unless-stopped
    volumes:
      - ./backup:/backup
      - mongodb_data:/data/db:ro
    environment:
      - MONGO_PASSWORD=${MONGO_PASSWORD:-changeme}
    command: |
      sh -c '
      while true; do
        sleep 86400
        mongodump --host mongodb --username admin --password $MONGO_PASSWORD --authenticationDatabase admin --db threat-intelligence --out /backup/$(date +%Y%m%d_%H%M%S)
        find /backup -type d -mtime +7 -exec rm -rf {} +
      done
      '
    depends_on:
      - mongodb
    networks:
      - threat-intel-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  threat-intel-network:
    driver: bridge
